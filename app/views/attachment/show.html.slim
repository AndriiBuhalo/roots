main
  .d-flex
    = render(partial: './layouts/left_col')
    .group_images.show_image
      .btn_album
        = link_to t('common.delete'), attachment_path(@attachment), class: 'btn btn-danger', method: :delete, data: { confirm: t('common.confirmation') }
        = link_to t('common.edit'), edit_image_info_path(@attachment), class: "btn btn-primary"
        = link_to t('common.back'), :back, class: 'btn btn-secondary'
      h3 = @attachment.file.identifier
      .image_block
        = image_tag @attachment.file.url, class: 'large', alt: "#{@attachment.file.identifier}" if @attachment.file?
    aside.right_col
      .filters_block
        h4.center.text-uppercase
          = t('.in this photo')
        p
          = t('.no people')
        h4.center.text-uppercase
          = t('.information')
        p
          = t('.keywords')
          '
          = link_to @imageInfo.keywords, findByTag_path(:tag => @imageInfo.keywords), class: 'badge badge-pill badge-info' if !@imageInfo.keywords.blank?
        p
          = t('.notes')
          span = @imageInfo.notes
        p
          = t('.place')
          span = @imageInfo.place
        p
          = t('.date')
          span
            = @imageInfo.date_accuracy
            '
            = @imageInfo.image_date.strftime("%Y-%m-%d") if !@imageInfo.image_date.blank?
        p
          = t('.albums')
          - @attachment.albums.each do |album|
            .albumsBlock
              = link_to album_path(album) do
                span = album.name
                = image_tag album.attachments.last.file.url, alt: "#{album.attachments.last.file.identifier}"
        p
          = t('.photo link')
          span.showLink = t('show link')
          input type="text" value="#{attachment_path(@attachment)}" style="display: none;" readonly="readonly" /
        h4.center.text-uppercase
          = t('.information')
        p
          = t('.type')
          span = @attachment.file.content_type
        p
          = t('.width')
          span
            = @attachment.file.width
            '
            = t('.px')
        p
          = t('.height')
          span
            = @attachment.file.height
            '
            = t('.px')
        p
          = t('.size')
          span
            = (@attachment.file.size.to_f / 1024).ceil(1)
            '
            = t('.kb')
        p
          = t('.downloaded')
          span = @imageInfo.downloaded
